# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
    fsType = "ext4";
  };

  fileSystems."/mnt/Public" = {
    device = "//192.168.1.109/Public";
    fsType = "cifs";
  };

  fileSystems."/var/lib/nomad/alloc/c745de59-e3b3-18ef-df73-6fc001bb9dd0/init/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/c745de59-e3b3-18ef-df73-6fc001bb9dd0/init/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/c745de59-e3b3-18ef-df73-6fc001bb9dd0/finalsync/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/c745de59-e3b3-18ef-df73-6fc001bb9dd0/finalsync/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d54a8ecf-1c4d-5fdf-f2c7-aa3992474498/setup/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d54a8ecf-1c4d-5fdf-f2c7-aa3992474498/setup/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d54a8ecf-1c4d-5fdf-f2c7-aa3992474498/tidy/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d54a8ecf-1c4d-5fdf-f2c7-aa3992474498/tidy/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d42e04fb-40c1-09a1-5470-ccde18a4f712/setup/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d42e04fb-40c1-09a1-5470-ccde18a4f712/setup/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d42e04fb-40c1-09a1-5470-ccde18a4f712/tidy/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/d42e04fb-40c1-09a1-5470-ccde18a4f712/tidy/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/280583b0-7b32-da09-5b6a-959362990ff8/setup/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/280583b0-7b32-da09-5b6a-959362990ff8/setup/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/280583b0-7b32-da09-5b6a-959362990ff8/tidy/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/280583b0-7b32-da09-5b6a-959362990ff8/tidy/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/0dc89489-57e5-a625-2771-023ee19d9e95/setup/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/0dc89489-57e5-a625-2771-023ee19d9e95/setup/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/0dc89489-57e5-a625-2771-023ee19d9e95/tidy/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/0dc89489-57e5-a625-2771-023ee19d9e95/tidy/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/9afdf338-fcbd-d955-f3fe-5d0e45f25a5c/setup/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/9afdf338-fcbd-d955-f3fe-5d0e45f25a5c/setup/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/9afdf338-fcbd-d955-f3fe-5d0e45f25a5c/tidy/secrets" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  fileSystems."/var/lib/nomad/alloc/9afdf338-fcbd-d955-f3fe-5d0e45f25a5c/tidy/private" = {
    device = "tmpfs";
    fsType = "tmpfs";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
